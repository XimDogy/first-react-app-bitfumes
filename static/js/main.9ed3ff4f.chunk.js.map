{"version":3,"sources":["config/firebase.js","store/AppContext.js","components/Header.js","utils/hooks/useFetchImage.js","utils/hooks/useTFClassify.js","components/image.js","components/Loading.js","components/Images.js","utils/hooks/useDebounce.js","page/Gallery.js","page/Home.js","page/Login.js","page/SignUp.js","page/tensorflow.js","utils/routes/index.js","utils/routes/AnimatedRoute.js","utils/routes/AuthRoute.js","utils/routes/GuestRoute.js","page/404.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AppContext","React","createContext","loggedIn","user","Header","useContext","isLoggedIn","history","useHistory","className","to","exact","activeClassName","onClick","console","log","auth","signOut","then","res","replace","catch","e","response","data","useFetchImage","page","searchTerm","useState","images","setImages","errors","setErrors","isLoading","setisLoading","fetch","url","axios","get","process","fetchRandom","results","fetchSearch","useEffect","useTFClassify","setIsLoading","predictions","setPredictions","img","mobilenet","model","classify","Image","index","image","handleRemove","show","isHovering","setIsHovering","imageRef","useRef","predict","onMouseEnter","onMouseLeave","length","map","prediction","Math","floor","probability","current","crossOrigin","ref","src","width","height","Loading","Images","setpage","setSearchTerm","slice","showPreview","setShowPreview","debounce","typingTimeout","setTypingTimeout","func","wait","clearTimeout","timeout","setTimeout","useDebounce","type","onChange","text","target","value","placeholder","dataLength","next","hasMore","div","layoutId","urls","regular","initial","opacity","animate","section","exit","rotate","transition","duration","Gallery","Home","h1","Login","error","setError","email","password","form","setForm","handleInput","name","onSubmit","preventDefault","signInWithEmailAndPassword","message","SignUp","initialValues","formikBag","createUserWithEmailAndPassword","setFieldError","validationSchema","Yup","required","min","Tensorflow","path","component","protected","paht","AnimatedRoute","children","rest","x","scale","AuthRoute","GuestRoute","NotFound","App","setIsLoggedIn","setUser","onAuthStateChanged","location","useLocation","Provider","exitBeforeEnter","routes","route","pathname","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ed3ff4f.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDit4F8Lp6HfUK6EEX4YzrRHV47A51d_-o\",\n    authDomain: \"first-reactjs-app-cf674.firebaseapp.com\",\n    projectId: \"first-reactjs-app-cf674\",\n    storageBucket: \"first-reactjs-app-cf674.appspot.com\",\n    messagingSenderId: \"966032533490\",\n    appId: \"1:966032533490:web:75f2e769ad1e1e1added6b\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;\n","import React from 'react';\n\nconst AppContext = React.createContext({ loggedIn: false, user: {} });\n\n\nexport default AppContext;","import React, { useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport firebase from '../config/firebase';\nimport AppContext from '../store/AppContext';\n\nexport default function Header() {\n    const [isLoggedIn, user] = useContext(AppContext);\n\n    const history = useHistory();\n\n\n    function logout() {\n        console.log(\"loguout called\");\n        firebase.auth().signOut().then((res) => {\n            console.log(\"logged out s\");\n            history.replace('/login');\n        }).catch((e) => {\n            console.log(e.response.data);\n            console.log(\"Failed to logout\");\n        });\n    }\n\n    return (\n        <nav className=\"py-5 bg-gray-900 text-white flex justify-between\">\n            <ul className=\"flex justify-between px-10\">\n\n                <li className=\"mr-5\">\n                    <NavLink to=\"/\" exact activeClassName=\"underline text-blue-200\">Home</NavLink>\n                </li>\n\n                <li>\n                    <NavLink to=\"/gallery\" activeClassName=\"underline text-blue-200\">Gallery</NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/tensorflow\" exact className=\"ml-5\" activeClassName=\"underline text-blue-200\" >Tensorflow</NavLink>\n                </li>\n\n            </ul>\n\n            <ul className=\"flex justify-between px-10\">\n                <li>\n                    {\n                        isLoggedIn ? (<button onClick={logout}>Logout</button>) : (<NavLink to=\"/login\" activeClassName=\"underline text-blue-200\">Login</NavLink>)\n                    }\n                </li>\n                {\n                    !isLoggedIn && (\n                        <li className=\"ml-5\">\n                            <NavLink to=\"/signup\" activeClassName=\"underline text-blue-200\">SignUp</NavLink>\n\n                        </li>)\n                }\n\n            </ul>\n        </nav>\n    )\n}\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react'\n\nconst api = process.env.REACT_APP_UNSPLASH_API;\nconst secret = process.env.REACT_APP_UNSPLASH_KEY;\n\nexport default function useFetchImage(page, searchTerm) {\n\n    const [images, setImages] = useState([])\n    const [errors, setErrors] = useState([])\n    const [isLoading, setisLoading] = useState(false)\n\n    function fetch() {\n        const url = searchTerm == null ? 'photos?' : `search/photos?query=${searchTerm}&`;\n        axios.get(\n            `${api}/${url}client_id=${secret}&page=${page}`\n        ).then((res) => {\n            searchTerm == null ? fetchRandom(res): fetchSearch(res);\n            setisLoading(false);\n\n        }).catch(e => {\n            setErrors([\"Unable to fetch images\"]);\n            setisLoading(false);\n        });\n    }\n\n    function fetchSearch(res) {\n        page > 1 \n        ? setImages([...images, ...res.data.results])\n        :setImages([...res.data.results]);\n\n    }\n\n    function fetchRandom(res) {\n        setImages([...images, ...res.data]);\n    }\n\n    useEffect(() => {\n        setisLoading(true);\n        fetch();\n\n\n    }, [page, searchTerm]);\n\n\n\n    return [images, setImages, errors, isLoading];\n}\n\n\n","import React, { useState } from 'react'\nimport * as mobilenet from \"@tensorflow-models/mobilenet\";\n\nexport default function useTFClassify() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [predictions, setPredictions] = useState([]);\n    \n    function predict(img) {\n        setIsLoading(true);\n        mobilenet.load().then(model => {\n            // Classify the image.\n            model.classify(img).then(predictions => {\n                setPredictions(predictions);\n                setIsLoading(false);\n            });\n        });\n    }\n\n    return [predict, predictions, setPredictions, isLoading];\n\n\n}\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useTFClassify from '../utils/hooks/useTFClassify';\n\nfunction Image({ index, image, handleRemove, show }) {\n\n    const [isHovering, setIsHovering] = useState(false);\n    const imageRef = useRef();\n\n    const [predict, predictions, setPredictions, isLoading] = useTFClassify();\n\n\n    return (\n\n        <div className=\"relative\"\n            onMouseEnter={() => setIsHovering(true)}\n            onMouseLeave={() => setIsHovering(false)}\n        >\n            {\n                (predictions.length > 0 || isLoading) && (\n                    <span \n                        onClick={() => setPredictions([])}\n                        className=\"ml-5 left-0 absolute bg-gray-800 text-white rounded-lg shadow px-2\"\n                    >\n                        {isLoading && <p>Fetching results...</p>}\n                        { \n                        predictions.map(prediction => (\n                                <div className=\"flex justify-between text-sm\">\n                                    <p>{prediction.className}</p>\n                                    <p>{Math.floor(prediction.probability * 100)}%</p>\n                                </div>\n                            ))\n                        }\n                    </span>\n                )\n            }\n            \n            <i\n                className={`fas fa-times absolute right-0 cursor-pointer opacity-25 \n                                hover:opacity-100 ${isHovering ? \"\" : \"hidden\"\n                    }`}\n                onClick={() => handleRemove(index)}\n            ></i>\n\n            <i\n                className={`fas fa-search absolute left-0 cursor-pointer opacity-25 \n                                hover:opacity-100 ${isHovering ? \"\" : \"hidden\"\n                    }`}\n                onClick={() => predict(imageRef.current) }\n            ></i>\n            <img \n                crossOrigin=\"anonymous\" \n                ref={imageRef} \n                onClick={show} \n                src={image} \n                width=\"100%\" \n                height=\"auto\" \n            />\n        </div>\n\n\n\n    )\n}\n\n\n\nImage.propTypes = {\n    show: PropTypes.func,\n    index: PropTypes.number,\n    image: PropTypes.string,\n    handleRemove: PropTypes.func\n}\n\n\nexport default Image;","import React from 'react'\n\nexport default function Loading() {\n    return (\n        <div className=\"flex h-screen\">\n            <p className=\"m-auto\">\n                <i className=\"fas fa-circle-notch fa-spin text-5xl text-blue-800\"></i>\n            </p>\n        </div>\n    )\n}\n","import { AnimatePresence, AnimateSharedLayout, motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport useDebounce from '../utils/hooks/useDebounce';\nimport useFetchImage from '../utils/hooks/useFetchImage';\nimport Image from './image';\nimport Loading from './Loading';\n\n\nexport default function Images() {\n    const [page, setpage] = useState(1);\n\n    const [searchTerm, setSearchTerm] = useState(null)\n\n    const [images, setImages, errors, isLoading] = useFetchImage(page, searchTerm);\n\n\n    function handleRemove(index) {\n        setImages([...images.slice(0, index), ...images.slice(index + 1, images.length)]);\n    }\n\n\n    \n\n        const [showPreview, setShowPreview] = useState(false);\n        \n       \n    \n\n    const debounce = useDebounce();\n\n    function handleInput(e) {\n        setpage(1);\n\n        const text = e.target.value;\n\n        debounce(() => setSearchTerm(text));\n\n    }\n\n\n\n    return (\n        <section>\n            <div className=\"my-5\">\n                <input\n                    type=\"text\"\n                    onChange={handleInput}\n                    className=\"w-full border rounded shadow p-2\"\n                    placeholder=\"Search\"\n                />\n            </div>\n            {\n                errors.length > 0 && (<div className=\"flex h-screen\">\n                    <p className=\"m-auto\">{errors[0]}</p>\n                </div>)\n            }\n\n<AnimateSharedLayout>\n                <InfiniteScroll\n                    dataLength={images.length}\n                    next={() => setpage(page + 1)}\n                    hasMore={true}\n                    className=\"flex flex-wrap\"\n                // loader={<Loading />}\n                >\n                    {images.map((img, index) => (\n                        <motion.div \n                            className=\"w-1/5 p-1 border flex justify-center\"\n                            key={index}\n                            layoutId={img.urls.regular}\n                            initial={{opacity: 0}}\n                            animate={{opacity: 1}}\n                        >\n                        <Image\n                            show={() => setShowPreview(img.urls.regular)}\n                            image={img.urls.regular}\n                            handleRemove={handleRemove}\n                            index={index}\n                            key={index}\n                        />\n                        </motion.div>\n\n                    ))}\n                </InfiniteScroll>\n\n                <AnimatePresence>\n                {\n                    showPreview && (\n                        <motion.section\n                        layoutId={showPreview}\n                            exit={{opacity: 0, rotate: 360, transition: {duration: 1}}}\n                            className=\"fixed w-full h-full flex justify-center items-center\n                                top-0 left-0 z-40\"\n                            onClick={() => setShowPreview(false)}\n                        >\n                            <div className=\"bg-white border rounded-lg\">\n                                <img className=\"border rounded-lg\" src={showPreview} width=\"600\" height=\"auto\" />\n                            </div>\n\n                        </motion.section>\n                    )\n                }\n\n            </AnimatePresence>\n\n            </AnimateSharedLayout>\n            {isLoading && <Loading />}\n\n        </section >\n    )\n}\n","import React, { useState } from 'react'\n\nexport default function useDebounce() {\n    const [typingTimeout, setTypingTimeout] = useState(\"\");\n\n    function debounce(func, wait=1000) {\n        clearTimeout(typingTimeout)\n\n        const timeout = setTimeout(() => func(), wait);\n\n        setTypingTimeout(timeout);\n    }\n\n    return debounce;\n}\n","import React from 'react'\nimport Images from '../components/Images'\n\n\nexport default function Gallery() {\n    return (\n        <section className=\"flex justify-center\">\n        <div className=\"w-10/12\">\n            <div className=\"text-center\">\n                <Images />\n            </div>\n        </div>\n    </section>\n    )\n}\n","import React from 'react'\nimport { motion } from 'framer-motion';\n\nexport default function Home() {\n    return (\n        <div className=\"flex h-screen\">\n            <motion.h1\n            // initial={{opacity: 0, y: -400 }}\n            //     animate={{ \n            //         scale: 1.5, \n            //         opacity: 1, y: 0, \n            //         transition: {duration: 1}, \n            //         rotate: 720,\n            //     }}\n                className=\"m-auto text-3xl\"\n            >\n                Welcome Home\n            </motion.h1>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Redirect, useHistory } from 'react-router-dom';\nimport firebase from '../config/firebase';\n\nexport default function Login() {\n    const [isLoading, setisLoading] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [form, setForm] = useState({email:\"\", password:\"\"});\n    // const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const history = useHistory();\n\n    function handleForm(e) {\n        if (isLoading) return;\n        setisLoading(true);\n        e.preventDefault();\n\n        firebase.auth().signInWithEmailAndPassword(form.email, form.password)\n            .then((res) => {\n                // setIsLoggedIn(true);\n                history.replace(\"/\");\n                setError(\"\");\n                setisLoading(false);\n            })\n            .catch((e) => {\n                setError(e.message);\n                setisLoading(false);\n            });\n    }\n\n    function handleInput(e) {\n        setForm({...form,[e.target.name]: e.target.value});\n    }\n\n    // if (isLoggedIn) return <Redirect to=\"/\" />;\n\n    return (\n        <div className=\"flex h-screen bg-gray-200\">\n            <div className=\"m-auto w-1/3  flex flex-wrap \n            justify-center shadow-lg rounded-lg bg-gradient-to-br \n            from-indigo-900 to-indigo-700\">\n\n                <form className=\"m-5 w-10/12 \" onSubmit={handleForm}>\n\n                    {error!=\"\" && <p className=\"text-white\">{error}</p>}\n\n                    <h1 className=\"w-full text-4xl text-white tracking-widest text-center my-6\">\n                        Login\n                    </h1>\n                    <div className=\"w-full my-6\">\n                        <input\n                            type=\"email\"\n                            className=\"p-2 rounded shadow w-full\"\n                            placeholder=\"Email or Username\"\n                            name=\"email\"\n                            value={form.email}\n                            onChange={handleInput}\n                        />\n                    </div>\n\n                    <div className=\"w-full my-6\">\n                        <input\n                            type=\"password\"\n                            className=\"p-2 rounded shadow w-full\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            value={form.password}\n                            onChange={handleInput}\n                        />\n                    </div>\n\n                    <div className=\"w-full my-10\">\n                        <button\n                            type=\"submit\"\n                            className=\"p-2 rounded shadow w-full bg-yellow-400 text-black\n                            bg-gradient-to-tr from-yellow-600 to-yellow-400 \"\n                        >\n                            {\n                                isLoading ? <i className=\"fas fa-circle-notch fa-spin\" ></i>\n                                    : \"Login\"\n                            }\n\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n","import { ErrorMessage, Field, Form, Formik, useFormik } from 'formik';\nimport React, { useState } from 'react'\nimport { Redirect, useHistory } from 'react-router-dom';\nimport firebase from '../config/firebase';\nimport * as Yup from 'yup';\n\nexport default function SignUp() {\n    const [isLoading, setIsLoading] = useState(false);\n    const history = useHistory();\n\n\n    return (\n        <Formik\n            initialValues={{ email: \"\", password: \"\" }}\n            onSubmit={(value, formikBag) => {\n                setIsLoading(true);\n                firebase\n                    .auth()\n                    .createUserWithEmailAndPassword(value.email, value.password)\n                    .then((res) => {\n                        setIsLoading(false);\n                        history.replace('/');\n                    }).catch((e) => {\n                        setIsLoading(false);\n                        formikBag.setFieldError('email', e.message);\n\n                    })\n            }}\n            validationSchema={Yup.object({\n                email: Yup.string()\n                    .required(\"Email is required\")\n                    .email(),\n                password: Yup.string().required(\"Password is required\").min(6)\n            })}\n        >\n\n\n            <div className=\"flex h-screen bg-gray-200 text-white\">\n                <div className=\"m-auto w-1/3  flex flex-wrap \n                    justify-center shadow-lg rounded-lg bg-gradient-to-br \n                    from-indigo-900 to-indigo-700\">\n\n                    <Form className=\"m-5 w-10/12 \" >\n\n                        <h1 className=\"w-full text-4xl text-white tracking-widest text-center my-6\">\n                            Sign Up Here\n                        </h1>\n                        <div className=\"w-full my-6\">\n\n                            <Field\n                                name=\"email\"\n                                type=\"email\"\n                                className=\"p-2 rounded shadow w-full text-black\"\n                                placeholder=\"Email or Username\"\n                            />\n\n                            <ErrorMessage name=\"email\" />\n                        </div>\n\n                        <div className=\"w-full my-6\">\n\n                            <Field\n                                name=\"password\"\n                                type=\"password\"\n                                className=\"p-2 rounded shadow w-full text-black\"\n                                placeholder=\"Password\"\n                            />\n\n                            <ErrorMessage name=\"password\" />\n\n                        </div>\n\n                        <div className=\"w-full my-10\">\n                            <button\n                                type=\"submit\"\n                                className=\"p-2 rounded shadow w-full bg-yellow-400 text-black\n                                bg-gradient-to-tr from-yellow-600 to-yellow-400 \"\n                            >\n                                {\n                                    isLoading ? <i className=\"fas fa-circle-notch fa-spin\" ></i>\n                                        : \"Sign Up\"\n                                }\n\n                            </button>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n\n        </Formik>\n    )\n}\n","import React, { useRef } from 'react'\nimport useTFClassify from '../utils/hooks/useTFClassify';\n\nexport default function Tensorflow() {\n\n    const imageRef = useRef();\n    const [predict, predictions, setPredictions, isLoading] = useTFClassify();\n\n\n    \n\n    return (\n        <div className=\"flex justify-center\">\n            <div className=\"1/3\">\n                <h1 className=\"text-center\">TensorFlow Example</h1>\n                <img src=\"https://images.unsplash.com/photo-1537151625747-768eb6cf92b2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwyMDExMzV8MHwxfHNlYXJjaHw3fHxkb2d8ZW58MHx8fA&ixlib=rb-1.2.1&q=80&w=1080\"\n                    width=\"400\"\n                    crossOrigin=\"anonymous\"\n                    ref={imageRef}\n                />\n\n                <div className=\"text-center p-5\">\n                    {predictions.length > 0 && \n                        predictions.map(prediction => (\n                                <div className=\"flex justify-between\">\n                                    <p>{prediction.className}</p>\n                                    <p>{Math.floor(prediction.probability * 100)}%</p>\n                                </div>\n                            ))}\n                    <button\n                        onClick={() => predict(imageRef.current)}\n                        className=\"w-64 my-5 text-white rounded bg-gray-900\"\n                    >\n                        {isLoading && '⏳' }\n                        \n                        {!isLoading && 'Predict Result'}\n                    </button>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","import Gallery from \"../../page/Gallery\";\nimport Home from \"../../page/Home\";\nimport Login from \"../../page/Login\";\nimport React from 'react';\nimport SignUp from \"../../page/SignUp\";\nimport Tensorflow from \"../../page/tensorflow\";\n\nexport default [\n    {\n        path: \"/\",\n        exact: true,\n        component: () => <Home />,\n        protected: null,\n    },\n\n    {\n        path: \"/gallery\",\n        component: () => <Gallery />,\n        protected: \"auth\",\n    },\n\n    \n\n    {\n        path: \"/login\",\n        component: () => <Login />,\n        protected: \"guest\",\n    },\n\n    {\n        path: \"/signup\",\n        component: () => <SignUp />,\n        protected: \"guest\",\n    },\n\n    {\n        paht: \"/tensorflow\",\n        component: () => <Tensorflow />,\n        protected: null,\n    },\n\n    \n];","import { motion } from 'framer-motion'\nimport React from 'react'\nimport { Route } from 'react-router-dom'\n\nexport default function AnimatedRoute({ children, ...rest }) {\n    return (\n\n        <Route {...rest}>\n            <motion.div\n                initial={{ x: 200 }}\n                animate={{ x: 0 }}\n                exit={{ scale: 0}}\n            >\n                {children}\n            </motion.div>\n        </Route>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Redirect, Route } from 'react-router-dom';\nimport Loading from '../../components/Loading';\nimport AppContext from '../../store/AppContext'\nimport AnimatedRoute from './AnimatedRoute';\n\nexport default function AuthRoute({children, ...rest}) {\n    const [isLoggedIn] = useContext(AppContext);\n\n    if(isLoggedIn) return <AnimatedRoute {...rest} >\n        {children}\n    </AnimatedRoute>;\n\n    return <Redirect to=\"/login\" />;\n}\n","import { motion } from 'framer-motion';\nimport React, { useContext } from 'react'\nimport { Redirect, Route } from 'react-router-dom';\nimport Loading from '../../components/Loading';\nimport AppContext from '../../store/AppContext'\nimport AnimatedRoute from './AnimatedRoute';\n\nexport default function GuestRoute({ children, ...rest }) {\n    const [isLoggedIn] = useContext(AppContext);\n\n\n    if (!isLoggedIn) return (\n        <AnimatedRoute {...rest}>\n            {children}\n        </AnimatedRoute>\n    )\n\n\n\n\n\n\n    return <Redirect to=\"/\" />;\n}\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div className=\"flex h-screen\">\n            <h1 className=\"text-4xl m-auto\">Page Not Found</h1>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport './assets/css/style.css';\nimport Header from './components/Header';\nimport routes from './utils/routes/index';\nimport firebase from './config/firebase';\nimport AppContext from './store/AppContext';\nimport AuthRoute from './utils/routes/AuthRoute';\nimport GuestRoute from './utils/routes/GuestRoute';\nimport Loading from './components/Loading';\nimport NotFound from './page/404';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport AnimatedRoute from './utils/routes/AnimatedRoute';\n\n\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [user, setUser] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                setIsLoggedIn(true);\n                setUser(user);\n                setIsLoading(false);\n            } else {\n                setUser({});\n                setIsLoggedIn(false);\n                setIsLoading(false);\n            }\n        })\n    }, []);\n\n    const location = useLocation();\n\n    if (isLoading) return <Loading />\n\n\n    return <AppContext.Provider value={[isLoggedIn, user]}>\n\n        <Header />\n\n        <AnimatePresence exitBeforeEnter initial={false}>\n\n            <Switch key={location.pathname} location={location}>\n\n\n                {routes.map((route, index) => {\n\n\n                    if (route.protected == \"guest\") {\n                        return (\n                            <GuestRoute\n                                key={index}\n                                path={route.path}\n                                exact={route.exact}\n                            >\n                                <route.component />\n                            </GuestRoute>\n                        );\n                    }\n\n                    if (route.protected == \"auth\") {\n                        return (\n                            <AuthRoute\n                                key={index}\n                                path={route.path}\n                                exact={route.exact}\n                            >\n                                <route.component />\n                            </AuthRoute>\n                        );\n                    }\n\n                    return (\n                        <AnimatedRoute\n                            key={index}\n                            path={route.path}\n                            exact={route.exact}\n\n                        >\n                            <route.component />\n\n                        </AnimatedRoute>\n                    );\n                })}\n\n                <Route\n                    path=\"*\"\n\n                >\n                    <NotFound />\n                </Route>\n\n\n            </Switch>\n        </AnimatePresence>\n\n\n    </AppContext.Provider>\n\n\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root')\n);"],"sourceRoot":""}